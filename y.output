Terminals unused in grammar

    LT
    LE
    GT
    GE
    EQ
    NE
    PLUS
    MINUS
    OR
    STAR
    SLASH
    DIV
    MOD
    AND
    FUNCTION_CALL
    ARRAY_ACCESS
    LIST


State 93 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: DEF ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    2 identifier_list: ID
    3                | identifier_list ',' ID

    4 declarations: declarations VAR identifier_list ':' type ';'
    5             | ε

    6 type: standard_type
    7     | ARRAY '[' range ']' OF standard_type

    8 range: INUM DOTDOT INUM

    9 standard_type: INTEGRAL
   10              | RATIONAL

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   12                        | ε

   13 subprogram_declaration: subprogram_header declarations subprogram_declarations compound_statement

   14 $@1: ε

   15 subprogram_header: FUNC ID $@1 arguments ':' standard_type ';'

   16 $@2: ε

   17 subprogram_header: PROC ID $@2 arguments ';'

   18 arguments: '(' parameter_list ')'
   19          | ε

   20 parameter_list: identifier_list ':' type
   21               | parameter_list ';' identifier_list ':' type

   22 compound_statement: BBEGIN optional_statements END

   23 optional_statements: statement_list
   24                    | ε

   25 statement_list: statement
   26               | statement_list ';' statement

   27 statement: variable ASSIGNOP expression
   28          | procedure_statement
   29          | compound_statement
   30          | IF expression THEN statement ELSE statement
   31          | IF expression THEN statement
   32          | WHILE expression DO statement
   33          | REPEAT statement UNTIL expression
   34          | FOR ID ASSIGNOP range DO statement

   35 variable: ID
   36         | ID '[' expression ']'

   37 procedure_statement: ID
   38                    | ID '(' expression_list ')'

   39 expression_list: expression
   40                | expression_list ',' expression

   41 expression: simple_expression
   42           | simple_expression RELOP simple_expression

   43 simple_expression: term
   44                  | ADDOP term
   45                  | simple_expression ADDOP term

   46 term: factor
   47     | term MULOP factor

   48 factor: ID
   49       | ID '(' expression_list ')'
   50       | ID '[' expression ']'
   51       | INUM
   52       | RNUM
   53       | '(' expression ')'
   54       | NOT factor


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 1 18 38 49 53
    ')' (41) 1 18 38 49 53
    ',' (44) 3 40
    '.' (46) 1
    ':' (58) 4 15 20 21
    ';' (59) 1 4 11 15 17 21 26
    '[' (91) 7 36 50
    ']' (93) 7 36 50
    error (256)
    DEF (258) 1
    VAR (259) 4
    ARRAY (260) 7
    OF (261) 7
    INTEGRAL (262) 9
    RATIONAL (263) 10
    BBEGIN (264) 22
    END (265) 22
    FUNC (266) 15
    PROC (267) 17
    IF (268) 30 31
    THEN (269) 30 31
    ELSE (270) 30
    WHILE (271) 32
    FOR (272) 34
    DO (273) 32 34
    DOTDOT (274) 8
    ASSIGNOP (275) 27 34
    REPEAT (276) 33
    UNTIL (277) 33
    RELOP <opval> (278) 42
    LT (279)
    LE (280)
    GT (281)
    GE (282)
    EQ (283)
    NE (284)
    ADDOP <opval> (285) 44 45
    PLUS (286)
    MINUS (287)
    OR (288)
    MULOP <opval> (289) 47
    STAR (290)
    SLASH (291)
    DIV (292)
    MOD (293)
    AND (294)
    NOT (295) 54
    FUNCTION_CALL (296)
    ARRAY_ACCESS (297)
    LIST (298)
    ID <sval> (299) 1 2 3 15 17 34 35 36 37 38 48 49 50
    INUM <ival> (300) 8 51
    RNUM <rval> (301) 52


Nonterminals, with rules where they appear

    $accept (55)
        on left: 0
    program (56)
        on left: 1
        on right: 0
    identifier_list <tval> (57)
        on left: 2 3
        on right: 1 3 4 20 21
    declarations (58)
        on left: 4 5
        on right: 1 4 13
    type <ival> (59)
        on left: 6 7
        on right: 4 20 21
    range (60)
        on left: 8
        on right: 7 34
    standard_type <ival> (61)
        on left: 9 10
        on right: 6 7 15
    subprogram_declarations (62)
        on left: 11 12
        on right: 1 11 13
    subprogram_declaration (63)
        on left: 13
        on right: 11
    subprogram_header (64)
        on left: 15 17
        on right: 13
    $@1 (65)
        on left: 14
        on right: 15
    $@2 (66)
        on left: 16
        on right: 17
    arguments (67)
        on left: 18 19
        on right: 15 17
    parameter_list (68)
        on left: 20 21
        on right: 18 21
    compound_statement (69)
        on left: 22
        on right: 1 13 29
    optional_statements (70)
        on left: 23 24
        on right: 22
    statement_list (71)
        on left: 25 26
        on right: 23 26
    statement (72)
        on left: 27 28 29 30 31 32 33 34
        on right: 25 26 30 31 32 33 34
    variable <tval> (73)
        on left: 35 36
        on right: 27
    procedure_statement (74)
        on left: 37 38
        on right: 28
    expression_list <tval> (75)
        on left: 39 40
        on right: 38 40 49
    expression <tval> (76)
        on left: 41 42
        on right: 27 30 31 32 33 36 39 40 50 53
    simple_expression <tval> (77)
        on left: 43 44 45
        on right: 41 42 45
    term <tval> (78)
        on left: 46 47
        on right: 43 44 45 47
    factor <tval> (79)
        on left: 48 49 50 51 52 53 54
        on right: 46 47 54


State 0

    0 $accept: • program $end

    DEF  shift, and go to state 1

    program  go to state 2


State 1

    1 program: DEF • ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: DEF ID • '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end •

    $default  accept


State 5

    1 program: DEF ID '(' • identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 6

    identifier_list  go to state 7


State 6

    2 identifier_list: ID •

    $default  reduce using rule 2 (identifier_list)


State 7

    1 program: DEF ID '(' identifier_list • ')' ';' declarations subprogram_declarations compound_statement '.'
    3 identifier_list: identifier_list • ',' ID

    ')'  shift, and go to state 8
    ','  shift, and go to state 9


State 8

    1 program: DEF ID '(' identifier_list ')' • ';' declarations subprogram_declarations compound_statement '.'

    ';'  shift, and go to state 10


State 9

    3 identifier_list: identifier_list ',' • ID

    ID  shift, and go to state 11


State 10

    1 program: DEF ID '(' identifier_list ')' ';' • declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 5 (declarations)

    declarations  go to state 12


State 11

    3 identifier_list: identifier_list ',' ID •

    $default  reduce using rule 3 (identifier_list)


State 12

    1 program: DEF ID '(' identifier_list ')' ';' declarations • subprogram_declarations compound_statement '.'
    4 declarations: declarations • VAR identifier_list ':' type ';'

    VAR  shift, and go to state 13

    $default  reduce using rule 12 (subprogram_declarations)

    subprogram_declarations  go to state 14


State 13

    4 declarations: declarations VAR • identifier_list ':' type ';'

    ID  shift, and go to state 6

    identifier_list  go to state 15


State 14

    1 program: DEF ID '(' identifier_list ')' ';' declarations subprogram_declarations • compound_statement '.'
   11 subprogram_declarations: subprogram_declarations • subprogram_declaration ';'

    BBEGIN  shift, and go to state 16
    FUNC    shift, and go to state 17
    PROC    shift, and go to state 18

    subprogram_declaration  go to state 19
    subprogram_header       go to state 20
    compound_statement      go to state 21


State 15

    3 identifier_list: identifier_list • ',' ID
    4 declarations: declarations VAR identifier_list • ':' type ';'

    ','  shift, and go to state 9
    ':'  shift, and go to state 22


State 16

   22 compound_statement: BBEGIN • optional_statements END

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    REPEAT  shift, and go to state 26
    ID      shift, and go to state 27

    $default  reduce using rule 24 (optional_statements)

    compound_statement   go to state 28
    optional_statements  go to state 29
    statement_list       go to state 30
    statement            go to state 31
    variable             go to state 32
    procedure_statement  go to state 33


State 17

   15 subprogram_header: FUNC • ID $@1 arguments ':' standard_type ';'

    ID  shift, and go to state 34


State 18

   17 subprogram_header: PROC • ID $@2 arguments ';'

    ID  shift, and go to state 35


State 19

   11 subprogram_declarations: subprogram_declarations subprogram_declaration • ';'

    ';'  shift, and go to state 36


State 20

   13 subprogram_declaration: subprogram_header • declarations subprogram_declarations compound_statement

    $default  reduce using rule 5 (declarations)

    declarations  go to state 37


State 21

    1 program: DEF ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement • '.'

    '.'  shift, and go to state 38


State 22

    4 declarations: declarations VAR identifier_list ':' • type ';'

    ARRAY     shift, and go to state 39
    INTEGRAL  shift, and go to state 40
    RATIONAL  shift, and go to state 41

    type           go to state 42
    standard_type  go to state 43


State 23

   30 statement: IF • expression THEN statement ELSE statement
   31          | IF • expression THEN statement

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 50
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 24

   32 statement: WHILE • expression DO statement

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 54
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 25

   34 statement: FOR • ID ASSIGNOP range DO statement

    ID  shift, and go to state 55


State 26

   33 statement: REPEAT • statement UNTIL expression

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    REPEAT  shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 56
    variable             go to state 32
    procedure_statement  go to state 33


State 27

   35 variable: ID •
   36         | ID • '[' expression ']'
   37 procedure_statement: ID •
   38                    | ID • '(' expression_list ')'

    '('  shift, and go to state 57
    '['  shift, and go to state 58

    ASSIGNOP  reduce using rule 35 (variable)
    $default  reduce using rule 37 (procedure_statement)


State 28

   29 statement: compound_statement •

    $default  reduce using rule 29 (statement)


State 29

   22 compound_statement: BBEGIN optional_statements • END

    END  shift, and go to state 59


State 30

   23 optional_statements: statement_list •
   26 statement_list: statement_list • ';' statement

    ';'  shift, and go to state 60

    $default  reduce using rule 23 (optional_statements)


State 31

   25 statement_list: statement •

    $default  reduce using rule 25 (statement_list)


State 32

   27 statement: variable • ASSIGNOP expression

    ASSIGNOP  shift, and go to state 61


State 33

   28 statement: procedure_statement •

    $default  reduce using rule 28 (statement)


State 34

   15 subprogram_header: FUNC ID • $@1 arguments ':' standard_type ';'

    $default  reduce using rule 14 ($@1)

    $@1  go to state 62


State 35

   17 subprogram_header: PROC ID • $@2 arguments ';'

    $default  reduce using rule 16 ($@2)

    $@2  go to state 63


State 36

   11 subprogram_declarations: subprogram_declarations subprogram_declaration ';' •

    $default  reduce using rule 11 (subprogram_declarations)


State 37

    4 declarations: declarations • VAR identifier_list ':' type ';'
   13 subprogram_declaration: subprogram_header declarations • subprogram_declarations compound_statement

    VAR  shift, and go to state 13

    $default  reduce using rule 12 (subprogram_declarations)

    subprogram_declarations  go to state 64


State 38

    1 program: DEF ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' •

    $default  reduce using rule 1 (program)


State 39

    7 type: ARRAY • '[' range ']' OF standard_type

    '['  shift, and go to state 65


State 40

    9 standard_type: INTEGRAL •

    $default  reduce using rule 9 (standard_type)


State 41

   10 standard_type: RATIONAL •

    $default  reduce using rule 10 (standard_type)


State 42

    4 declarations: declarations VAR identifier_list ':' type • ';'

    ';'  shift, and go to state 66


State 43

    6 type: standard_type •

    $default  reduce using rule 6 (type)


State 44

   44 simple_expression: ADDOP • term

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    term    go to state 67
    factor  go to state 53


State 45

   54 factor: NOT • factor

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    factor  go to state 68


State 46

   48 factor: ID •
   49       | ID • '(' expression_list ')'
   50       | ID • '[' expression ']'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 48 (factor)


State 47

   51 factor: INUM •

    $default  reduce using rule 51 (factor)


State 48

   52 factor: RNUM •

    $default  reduce using rule 52 (factor)


State 49

   53 factor: '(' • expression ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 71
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 50

   30 statement: IF expression • THEN statement ELSE statement
   31          | IF expression • THEN statement

    THEN  shift, and go to state 72


State 51

   41 expression: simple_expression •
   42           | simple_expression • RELOP simple_expression
   45 simple_expression: simple_expression • ADDOP term

    RELOP  shift, and go to state 73
    ADDOP  shift, and go to state 74

    $default  reduce using rule 41 (expression)


State 52

   43 simple_expression: term •
   47 term: term • MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 43 (simple_expression)


State 53

   46 term: factor •

    $default  reduce using rule 46 (term)


State 54

   32 statement: WHILE expression • DO statement

    DO  shift, and go to state 76


State 55

   34 statement: FOR ID • ASSIGNOP range DO statement

    ASSIGNOP  shift, and go to state 77


State 56

   33 statement: REPEAT statement • UNTIL expression

    UNTIL  shift, and go to state 78


State 57

   38 procedure_statement: ID '(' • expression_list ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression_list    go to state 79
    expression         go to state 80
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 58

   36 variable: ID '[' • expression ']'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 81
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 59

   22 compound_statement: BBEGIN optional_statements END •

    $default  reduce using rule 22 (compound_statement)


State 60

   26 statement_list: statement_list ';' • statement

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    REPEAT  shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 82
    variable             go to state 32
    procedure_statement  go to state 33


State 61

   27 statement: variable ASSIGNOP • expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 83
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 62

   15 subprogram_header: FUNC ID $@1 • arguments ':' standard_type ';'

    '('  shift, and go to state 84

    $default  reduce using rule 19 (arguments)

    arguments  go to state 85


State 63

   17 subprogram_header: PROC ID $@2 • arguments ';'

    '('  shift, and go to state 84

    $default  reduce using rule 19 (arguments)

    arguments  go to state 86


State 64

   11 subprogram_declarations: subprogram_declarations • subprogram_declaration ';'
   13 subprogram_declaration: subprogram_header declarations subprogram_declarations • compound_statement

    BBEGIN  shift, and go to state 16
    FUNC    shift, and go to state 17
    PROC    shift, and go to state 18

    subprogram_declaration  go to state 19
    subprogram_header       go to state 20
    compound_statement      go to state 87


State 65

    7 type: ARRAY '[' • range ']' OF standard_type

    INUM  shift, and go to state 88

    range  go to state 89


State 66

    4 declarations: declarations VAR identifier_list ':' type ';' •

    $default  reduce using rule 4 (declarations)


State 67

   44 simple_expression: ADDOP term •
   47 term: term • MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 44 (simple_expression)


State 68

   54 factor: NOT factor •

    $default  reduce using rule 54 (factor)


State 69

   49 factor: ID '(' • expression_list ')'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression_list    go to state 90
    expression         go to state 80
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 70

   50 factor: ID '[' • expression ']'

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 91
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 71

   53 factor: '(' expression • ')'

    ')'  shift, and go to state 92


State 72

   30 statement: IF expression THEN • statement ELSE statement
   31          | IF expression THEN • statement

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    REPEAT  shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 93
    variable             go to state 32
    procedure_statement  go to state 33


State 73

   42 expression: simple_expression RELOP • simple_expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    simple_expression  go to state 94
    term               go to state 52
    factor             go to state 53


State 74

   45 simple_expression: simple_expression ADDOP • term

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    term    go to state 95
    factor  go to state 53


State 75

   47 term: term MULOP • factor

    NOT   shift, and go to state 45
    ID    shift, and go to state 46
    INUM  shift, and go to state 47
    RNUM  shift, and go to state 48
    '('   shift, and go to state 49

    factor  go to state 96


State 76

   32 statement: WHILE expression DO • statement

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    REPEAT  shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 97
    variable             go to state 32
    procedure_statement  go to state 33


State 77

   34 statement: FOR ID ASSIGNOP • range DO statement

    INUM  shift, and go to state 88

    range  go to state 98


State 78

   33 statement: REPEAT statement UNTIL • expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 99
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 79

   38 procedure_statement: ID '(' expression_list • ')'
   40 expression_list: expression_list • ',' expression

    ')'  shift, and go to state 100
    ','  shift, and go to state 101


State 80

   39 expression_list: expression •

    $default  reduce using rule 39 (expression_list)


State 81

   36 variable: ID '[' expression • ']'

    ']'  shift, and go to state 102


State 82

   26 statement_list: statement_list ';' statement •

    $default  reduce using rule 26 (statement_list)


State 83

   27 statement: variable ASSIGNOP expression •

    $default  reduce using rule 27 (statement)


State 84

   18 arguments: '(' • parameter_list ')'

    ID  shift, and go to state 6

    identifier_list  go to state 103
    parameter_list   go to state 104


State 85

   15 subprogram_header: FUNC ID $@1 arguments • ':' standard_type ';'

    ':'  shift, and go to state 105


State 86

   17 subprogram_header: PROC ID $@2 arguments • ';'

    ';'  shift, and go to state 106


State 87

   13 subprogram_declaration: subprogram_header declarations subprogram_declarations compound_statement •

    $default  reduce using rule 13 (subprogram_declaration)


State 88

    8 range: INUM • DOTDOT INUM

    DOTDOT  shift, and go to state 107


State 89

    7 type: ARRAY '[' range • ']' OF standard_type

    ']'  shift, and go to state 108


State 90

   40 expression_list: expression_list • ',' expression
   49 factor: ID '(' expression_list • ')'

    ')'  shift, and go to state 109
    ','  shift, and go to state 101


State 91

   50 factor: ID '[' expression • ']'

    ']'  shift, and go to state 110


State 92

   53 factor: '(' expression ')' •

    $default  reduce using rule 53 (factor)


State 93

   30 statement: IF expression THEN statement • ELSE statement
   31          | IF expression THEN statement •

    ELSE  shift, and go to state 111

    ELSE      [reduce using rule 31 (statement)]
    $default  reduce using rule 31 (statement)


State 94

   42 expression: simple_expression RELOP simple_expression •
   45 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 74

    $default  reduce using rule 42 (expression)


State 95

   45 simple_expression: simple_expression ADDOP term •
   47 term: term • MULOP factor

    MULOP  shift, and go to state 75

    $default  reduce using rule 45 (simple_expression)


State 96

   47 term: term MULOP factor •

    $default  reduce using rule 47 (term)


State 97

   32 statement: WHILE expression DO statement •

    $default  reduce using rule 32 (statement)


State 98

   34 statement: FOR ID ASSIGNOP range • DO statement

    DO  shift, and go to state 112


State 99

   33 statement: REPEAT statement UNTIL expression •

    $default  reduce using rule 33 (statement)


State 100

   38 procedure_statement: ID '(' expression_list ')' •

    $default  reduce using rule 38 (procedure_statement)


State 101

   40 expression_list: expression_list ',' • expression

    ADDOP  shift, and go to state 44
    NOT    shift, and go to state 45
    ID     shift, and go to state 46
    INUM   shift, and go to state 47
    RNUM   shift, and go to state 48
    '('    shift, and go to state 49

    expression         go to state 113
    simple_expression  go to state 51
    term               go to state 52
    factor             go to state 53


State 102

   36 variable: ID '[' expression ']' •

    $default  reduce using rule 36 (variable)


State 103

    3 identifier_list: identifier_list • ',' ID
   20 parameter_list: identifier_list • ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 114


State 104

   18 arguments: '(' parameter_list • ')'
   21 parameter_list: parameter_list • ';' identifier_list ':' type

    ')'  shift, and go to state 115
    ';'  shift, and go to state 116


State 105

   15 subprogram_header: FUNC ID $@1 arguments ':' • standard_type ';'

    INTEGRAL  shift, and go to state 40
    RATIONAL  shift, and go to state 41

    standard_type  go to state 117


State 106

   17 subprogram_header: PROC ID $@2 arguments ';' •

    $default  reduce using rule 17 (subprogram_header)


State 107

    8 range: INUM DOTDOT • INUM

    INUM  shift, and go to state 118


State 108

    7 type: ARRAY '[' range ']' • OF standard_type

    OF  shift, and go to state 119


State 109

   49 factor: ID '(' expression_list ')' •

    $default  reduce using rule 49 (factor)


State 110

   50 factor: ID '[' expression ']' •

    $default  reduce using rule 50 (factor)


State 111

   30 statement: IF expression THEN statement ELSE • statement

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    REPEAT  shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 120
    variable             go to state 32
    procedure_statement  go to state 33


State 112

   34 statement: FOR ID ASSIGNOP range DO • statement

    BBEGIN  shift, and go to state 16
    IF      shift, and go to state 23
    WHILE   shift, and go to state 24
    FOR     shift, and go to state 25
    REPEAT  shift, and go to state 26
    ID      shift, and go to state 27

    compound_statement   go to state 28
    statement            go to state 121
    variable             go to state 32
    procedure_statement  go to state 33


State 113

   40 expression_list: expression_list ',' expression •

    $default  reduce using rule 40 (expression_list)


State 114

   20 parameter_list: identifier_list ':' • type

    ARRAY     shift, and go to state 39
    INTEGRAL  shift, and go to state 40
    RATIONAL  shift, and go to state 41

    type           go to state 122
    standard_type  go to state 43


State 115

   18 arguments: '(' parameter_list ')' •

    $default  reduce using rule 18 (arguments)


State 116

   21 parameter_list: parameter_list ';' • identifier_list ':' type

    ID  shift, and go to state 6

    identifier_list  go to state 123


State 117

   15 subprogram_header: FUNC ID $@1 arguments ':' standard_type • ';'

    ';'  shift, and go to state 124


State 118

    8 range: INUM DOTDOT INUM •

    $default  reduce using rule 8 (range)


State 119

    7 type: ARRAY '[' range ']' OF • standard_type

    INTEGRAL  shift, and go to state 40
    RATIONAL  shift, and go to state 41

    standard_type  go to state 125


State 120

   30 statement: IF expression THEN statement ELSE statement •

    $default  reduce using rule 30 (statement)


State 121

   34 statement: FOR ID ASSIGNOP range DO statement •

    $default  reduce using rule 34 (statement)


State 122

   20 parameter_list: identifier_list ':' type •

    $default  reduce using rule 20 (parameter_list)


State 123

    3 identifier_list: identifier_list • ',' ID
   21 parameter_list: parameter_list ';' identifier_list • ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 126


State 124

   15 subprogram_header: FUNC ID $@1 arguments ':' standard_type ';' •

    $default  reduce using rule 15 (subprogram_header)


State 125

    7 type: ARRAY '[' range ']' OF standard_type •

    $default  reduce using rule 7 (type)


State 126

   21 parameter_list: parameter_list ';' identifier_list ':' • type

    ARRAY     shift, and go to state 39
    INTEGRAL  shift, and go to state 40
    RATIONAL  shift, and go to state 41

    type           go to state 127
    standard_type  go to state 43


State 127

   21 parameter_list: parameter_list ';' identifier_list ':' type •

    $default  reduce using rule 21 (parameter_list)
